# This workflow will build and deploy a Node.js app to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 2. Add a GitHub Actions secret named AZURE_WEBAPP_NAME with the name of your App Service app.
#
# 3. Change the value for the AZURE_WEBAPP_PACKAGE_PATH.
#    For example, to change it to the root directory, use '.'

name: Build and deploy Node.js app to Azure Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'                # set this to the node version to use
  AZURE_WEBAPP_NAME: 'ghbill-dev-app' # set this to your application name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your app project, defaults to repository root

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install and build
      run: |
        npm ci
        npm run build --if-present
      env:
        CI: true
        # Usar valores fictícios para variáveis de ambiente durante o build
        # Não se preocupe, elas serão substituídas no Azure pelo Key Vault
        SESSION_SECRET: "placeholder-session-secret"
        GITHUB_CLIENT_ID: "placeholder-client-id"
        GITHUB_CLIENT_SECRET: "placeholder-client-secret"
        MONGODB_URI: "placeholder-mongodb-uri"

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}